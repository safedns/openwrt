diff -Nur a/dbus/dnsmasq.conf b/dbus/dnsmasq.conf
--- a/dbus/dnsmasq.conf	2017-05-23 02:58:46.000000000 +0500
+++ b/dbus/dnsmasq.conf	2018-01-14 21:51:15.000000000 +0500
@@ -3,12 +3,12 @@
  "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">
 <busconfig>
 	<policy user="root">
-		<allow own="uk.org.thekelleys.dnsmasq"/>
-		<allow send_destination="uk.org.thekelleys.dnsmasq"/>
+		<allow own="uk.org.thekelleys.safedns"/>
+		<allow send_destination="uk.org.thekelleys.safedns"/>
 	</policy>
 	<policy context="default">
-                <deny own="uk.org.thekelleys.dnsmasq"/>
-                <deny send_destination="uk.org.thekelleys.dnsmasq"/>
+                <deny own="uk.org.thekelleys.safedns"/>
+                <deny send_destination="uk.org.thekelleys.safedns"/>
         </policy>
 </busconfig>
 
diff -Nur a/Makefile b/Makefile
--- a/Makefile	2017-05-23 02:58:46.000000000 +0500
+++ b/Makefile	2018-01-14 21:57:13.000000000 +0500
@@ -28,7 +28,7 @@
 LDFLAGS       = 
 COPTS         = 
 RPM_OPT_FLAGS = 
-LIBS          = 
+LIBS          = -luci
 
 #################################################################
 
@@ -76,10 +76,10 @@
        helper.o tftp.o log.o conntrack.o dhcp6.o rfc3315.o \
        dhcp-common.o outpacket.o radv.o slaac.o auth.o ipset.o \
        domain.o dnssec.o blockdata.o tables.o loop.o inotify.o \
-       poll.o rrfilter.o edns0.o arp.o
+       poll.o rrfilter.o edns0.o arp.o safedns.o
 
 hdrs = dnsmasq.h config.h dhcp-protocol.h dhcp6-protocol.h \
-       dns-protocol.h radv-protocol.h ip6addr.h
+       dns-protocol.h radv-protocol.h ip6addr.h safedns.h
 
 all : $(BUILDDIR)
 	@cd $(BUILDDIR) && $(MAKE) \
@@ -97,7 +97,10 @@
 	rm -f core */core
 	rm -f *~ contrib/*/*~ */*~
 
-install : all install-common
+install : all
+	echo -@-@-@-@-@-@-@-@-@- my install target -@-@-@-@-@-@-@-@-@-
+	$(INSTALL) -d                 $(DESTDIR)/usr/sbin
+	$(INSTALL) -m 755 src/dnsmasq $(DESTDIR)/usr/sbin/safedns
 
 install-common :
 	$(INSTALL) -d $(DESTDIR)$(BINDIR) -d $(DESTDIR)$(MANDIR)/man8
diff -Nur a/src/config.h b/src/config.h
--- a/src/config.h	2017-05-23 02:58:46.000000000 +0500
+++ b/src/config.h	2018-01-14 21:51:15.000000000 +0500
@@ -47,8 +47,8 @@
 #define TFTP_MAX_CONNECTIONS 50 /* max simultaneous connections */
 #define LOG_MAX 5 /* log-queue length */
 #define RANDFILE "/dev/urandom"
-#define DNSMASQ_SERVICE "uk.org.thekelleys.dnsmasq" /* Default - may be overridden by config */
-#define DNSMASQ_PATH "/uk/org/thekelleys/dnsmasq"
+#define DNSMASQ_SERVICE "uk.org.thekelleys.safedns" /* Default - may be overridden by config */
+#define DNSMASQ_PATH "/uk/org/thekelleys/safedns"
 #define AUTH_TTL 600 /* default TTL for auth DNS */
 #define SOA_REFRESH 1200 /* SOA refresh default */
 #define SOA_RETRY 180 /* SOA retry default */
@@ -186,21 +186,21 @@
 
 #ifndef LEASEFILE
 #   if defined(__FreeBSD__) || defined (__OpenBSD__) || defined(__DragonFly__) || defined(__NetBSD__)
-#      define LEASEFILE "/var/db/dnsmasq.leases"
+#      define LEASEFILE "/var/db/safedns.leases"
 #   elif defined(__sun__) || defined (__sun)
-#      define LEASEFILE "/var/cache/dnsmasq.leases"
+#      define LEASEFILE "/var/cache/safedns.leases"
 #   elif defined(__ANDROID__)
-#      define LEASEFILE "/data/misc/dhcp/dnsmasq.leases"
+#      define LEASEFILE "/data/misc/dhcp/safedns.leases"
 #   else
-#      define LEASEFILE "/var/lib/misc/dnsmasq.leases"
+#      define LEASEFILE "/var/lib/misc/safedns.leases"
 #   endif
 #endif
 
 #ifndef CONFFILE
 #   if defined(__FreeBSD__)
-#      define CONFFILE "/usr/local/etc/dnsmasq.conf"
+#      define CONFFILE "/usr/local/etc/safedns.conf"
 #   else
-#      define CONFFILE "/etc/dnsmasq.conf"
+#      define CONFFILE "/etc/safedns.conf"
 #   endif
 #endif
 
@@ -214,9 +214,9 @@
 
 #ifndef RUNFILE
 #   if defined(__ANDROID__)
-#      define RUNFILE "/data/dnsmasq.pid"
+#      define RUNFILE "/data/safedns.pid"
 #    else
-#      define RUNFILE "/var/run/dnsmasq.pid"
+#      define RUNFILE "/var/run/safedns.pid"
 #    endif
 #endif
 
diff -Nur a/src/dnsmasq.c b/src/dnsmasq.c
--- a/src/dnsmasq.c	2017-05-23 02:58:46.000000000 +0500
+++ b/src/dnsmasq.c	2018-01-14 21:51:15.000000000 +0500
@@ -18,6 +18,7 @@
 #define DNSMASQ_COMPILE_OPTS
 
 #include "dnsmasq.h"
+#include "safedns.h"
 
 struct daemon *daemon;
 
@@ -34,6 +35,10 @@
 
 int main (int argc, char **argv)
 {
+  #ifdef SAFEDNS_LOG
+  my_syslog(LOG_INFO, "==========  start safedns ==========");
+  #endif // SAFEDNS_LOG
+
   int bind_fallback = 0;
   time_t now;
   struct sigaction sigact;
@@ -64,8 +69,8 @@
 
 #ifdef LOCALEDIR
   setlocale(LC_ALL, "");
-  bindtextdomain("dnsmasq", LOCALEDIR); 
-  textdomain("dnsmasq");
+  bindtextdomain("safedns", LOCALEDIR); 
+  textdomain("safedns");
 #endif
 
   sigact.sa_handler = sig_handler;
@@ -872,6 +877,8 @@
     }
 #endif
 
+  safedns_load_config();
+
   /* finished start-up - release original process */
   if (err_pipe[1] != -1)
     while (retry_send(close(err_pipe[1])));
@@ -1040,9 +1047,17 @@
 	}
       check_dbus_listeners();
 #endif
+
+      #ifdef SAFEDNS_TRACE
+      my_syslog(LOG_DEBUG, "/---- check_dns_listeners (before) ----\\");
+      #endif // SAFEDNS_TRACE
       
       check_dns_listeners(now);
 
+      #ifdef SAFEDNS_TRACE
+      my_syslog(LOG_DEBUG, "\\____ check_dns_listeners (after)  ____/");
+      #endif // SAFEDNS_TRACE
+
 #ifdef HAVE_TFTP
       check_tftp_listeners(now);
 #endif      
@@ -1242,6 +1257,8 @@
 #endif
 	/* fall through */
 	
+	safedns_load_config();
+	
       case EVENT_INIT:
 	clear_cache_and_reload(now);
 	
diff -Nur a/src/forward.c b/src/forward.c
--- a/src/forward.c	2017-05-23 02:58:46.000000000 +0500
+++ b/src/forward.c	2018-01-14 22:03:29.000000000 +0500
@@ -15,6 +15,7 @@
 */
 
 #include "dnsmasq.h"
+#include "safedns.h"
 
 static struct frec *lookup_frec(unsigned short id, void *hash);
 static struct frec *lookup_frec_by_sender(unsigned short id,
@@ -234,6 +235,10 @@
 			 struct dns_header *header, size_t plen, time_t now, 
 			 struct frec *forward, int ad_reqd, int do_bit)
 {
+  #ifdef SAFEDNS_TRACE
+  my_syslog(LOG_DEBUG, "forward_query");
+  #endif // SAFEDNS_TRACE
+
   char *domain = NULL;
   int type = SERV_DO_DNSSEC, norebind = 0;
   struct all_addr *addrp = NULL;
@@ -500,6 +505,13 @@
 		}
 #endif
 
+		if(safedns_enabled)
+		{
+			uint32_t ip = ntohl(udpaddr->in.sin_addr.s_addr);
+			unsigned short *port_ptr = &start->addr.in.sin_port;
+			plen = safedns_change_packet_and_port("UDP", ip, (uint8_t *)(daemon->packet), plen, port_ptr);
+		}
+
 	      if (retry_send(sendto(fd, (char *)header, plen, 0,
 				    &start->addr.sa,
 				    sa_len(&start->addr))))
@@ -559,6 +571,10 @@
 			    int no_cache, int cache_secure, int bogusanswer, int ad_reqd, int do_bit, int added_pheader, 
 			    int check_subnet, union mysockaddr *query_source)
 {
+  #ifdef SAFEDNS_TRACE
+  my_syslog(LOG_DEBUG, "process_reply");
+  #endif // SAFEDNS_TRACE
+
   unsigned char *pheader, *sizep;
   char **sets = 0;
   int munged = 0, is_sign;
@@ -730,6 +746,10 @@
 /* sets new last_server */
 void reply_query(int fd, int family, time_t now)
 {
+  #ifdef SAFEDNS_TRACE
+  my_syslog(LOG_DEBUG, "reply_query");
+  #endif // SAFEDNS_TRACE
+
   /* packet from peer server, extract data for cache, and send to
      original requester */
   struct dns_header *header;
@@ -1117,6 +1137,10 @@
 
 void receive_query(struct listener *listen, time_t now)
 {
+  #ifdef SAFEDNS_TRACE
+  my_syslog(LOG_DEBUG, "receive_query");
+  #endif // SAFEDNS_TRACE
+
   struct dns_header *header = (struct dns_header *)daemon->packet;
   union mysockaddr source_addr;
   unsigned char *pheader;
@@ -1599,6 +1623,10 @@
 unsigned char *tcp_request(int confd, time_t now,
 			   union mysockaddr *local_addr, struct in_addr netmask, int auth_dns)
 {
+  #ifdef SAFEDNS_TRACE
+  my_syslog(LOG_DEBUG, "tcp_request");
+  #endif // SAFEDNS_TRACE
+
   size_t size = 0;
   int norebind = 0;
 #ifdef HAVE_AUTH
@@ -1873,6 +1901,14 @@
 		      if (!(gotname = extract_request(header, (unsigned int)size, daemon->namebuff, &qtype)))
 			strcpy(daemon->namebuff, "query");
 		      
+			if(safedns_enabled)
+			{
+				uint32_t ip = ntohl(peer_addr.in.sin_addr.s_addr);
+				unsigned short *port_ptr = &last_server->addr.in.sin_port;
+				size = safedns_change_packet_and_port("TCP", ip, (uint8_t *)payload, size, port_ptr);
+				*length = htons(size);
+			}
+		
 		      if (!read_write(last_server->tcpfd, packet, size + sizeof(u16), 0) ||
 			  !read_write(last_server->tcpfd, &c1, 1, 1) ||
 			  !read_write(last_server->tcpfd, &c2, 1, 1) ||
diff -Nur a/src/helper.c b/src/helper.c
--- a/src/helper.c	2017-05-23 02:58:46.000000000 +0500
+++ b/src/helper.c	2018-01-14 21:51:15.000000000 +0500
@@ -557,78 +557,78 @@
       if (data.action != ACTION_TFTP && data.action != ACTION_ARP)
 	{
 #ifdef HAVE_DHCP6
-	  my_setenv("DNSMASQ_IAID", is6 ? daemon->dhcp_buff3 : NULL, &err);
-	  my_setenv("DNSMASQ_SERVER_DUID", is6 ? daemon->dhcp_packet.iov_base : NULL, &err); 
-	  my_setenv("DNSMASQ_MAC", is6 && data.hwaddr_len != 0 ? daemon->dhcp_buff : NULL, &err);
+	  my_setenv("SAFEDNS_IAID", is6 ? daemon->dhcp_buff3 : NULL, &err);
+	  my_setenv("SAFEDNS_SERVER_DUID", is6 ? daemon->dhcp_packet.iov_base : NULL, &err); 
+	  my_setenv("SAFEDNS_MAC", is6 && data.hwaddr_len != 0 ? daemon->dhcp_buff : NULL, &err);
 #endif
 	  
-	  my_setenv("DNSMASQ_CLIENT_ID", !is6 && data.clid_len != 0 ? daemon->packet : NULL, &err);
-	  my_setenv("DNSMASQ_INTERFACE", strlen(data.interface) != 0 ? data.interface : NULL, &err);
+	  my_setenv("SAFEDNS_CLIENT_ID", !is6 && data.clid_len != 0 ? daemon->packet : NULL, &err);
+	  my_setenv("SAFEDNS_INTERFACE", strlen(data.interface) != 0 ? data.interface : NULL, &err);
 	  
 #ifdef HAVE_BROKEN_RTC
 	  sprintf(daemon->dhcp_buff2, "%u", data.length);
-	  my_setenv("DNSMASQ_LEASE_LENGTH", daemon->dhcp_buff2, &err);
+	  my_setenv("SAFEDNS_LEASE_LENGTH", daemon->dhcp_buff2, &err);
 #else
 	  sprintf(daemon->dhcp_buff2, "%lu", (unsigned long)data.expires);
-	  my_setenv("DNSMASQ_LEASE_EXPIRES", daemon->dhcp_buff2, &err); 
+	  my_setenv("SAFEDNS_LEASE_EXPIRES", daemon->dhcp_buff2, &err); 
 #endif
 	  
-	  my_setenv("DNSMASQ_DOMAIN", domain, &err);
+	  my_setenv("SAFEDNS_DOMAIN", domain, &err);
 	  
 	  end = extradata + data.ed_len;
 	  buf = extradata;
 	  
 	  if (!is6)
-	    buf = grab_extradata(buf, end, "DNSMASQ_VENDOR_CLASS", &err);
+	    buf = grab_extradata(buf, end, "SAFEDNS_VENDOR_CLASS", &err);
 #ifdef HAVE_DHCP6
 	  else
 	    {
 	      if (data.vendorclass_count != 0)
 		{
-		  buf = grab_extradata(buf, end, "DNSMASQ_VENDOR_CLASS_ID", &err);
+		  buf = grab_extradata(buf, end, "SAFEDNS_VENDOR_CLASS_ID", &err);
 		  for (i = 0; i < data.vendorclass_count - 1; i++)
 		    {
-		      sprintf(daemon->dhcp_buff2, "DNSMASQ_VENDOR_CLASS%i", i);
+		      sprintf(daemon->dhcp_buff2, "SAFEDNS_VENDOR_CLASS%i", i);
 		      buf = grab_extradata(buf, end, daemon->dhcp_buff2, &err);
 		    }
 		}
 	    }
 #endif
 	  
-	  buf = grab_extradata(buf, end, "DNSMASQ_SUPPLIED_HOSTNAME", &err);
+	  buf = grab_extradata(buf, end, "SAFEDNS_SUPPLIED_HOSTNAME", &err);
 	  
 	  if (!is6)
 	    {
-	      buf = grab_extradata(buf, end, "DNSMASQ_CPEWAN_OUI", &err);
-	      buf = grab_extradata(buf, end, "DNSMASQ_CPEWAN_SERIAL", &err);   
-	      buf = grab_extradata(buf, end, "DNSMASQ_CPEWAN_CLASS", &err);
-	      buf = grab_extradata(buf, end, "DNSMASQ_CIRCUIT_ID", &err);
-	      buf = grab_extradata(buf, end, "DNSMASQ_SUBSCRIBER_ID", &err);
-	      buf = grab_extradata(buf, end, "DNSMASQ_REMOTE_ID", &err);
-	      buf = grab_extradata(buf, end, "DNSMASQ_REQUESTED_OPTIONS", &err);
+	      buf = grab_extradata(buf, end, "SAFEDNS_CPEWAN_OUI", &err);
+	      buf = grab_extradata(buf, end, "SAFEDNS_CPEWAN_SERIAL", &err);   
+	      buf = grab_extradata(buf, end, "SAFEDNS_CPEWAN_CLASS", &err);
+	      buf = grab_extradata(buf, end, "SAFEDNS_CIRCUIT_ID", &err);
+	      buf = grab_extradata(buf, end, "SAFEDNS_SUBSCRIBER_ID", &err);
+	      buf = grab_extradata(buf, end, "SAFEDNS_REMOTE_ID", &err);
+	      buf = grab_extradata(buf, end, "SAFEDNS_REQUESTED_OPTIONS", &err);
 	    }
 	  
-	  buf = grab_extradata(buf, end, "DNSMASQ_TAGS", &err);
+	  buf = grab_extradata(buf, end, "SAFEDNS_TAGS", &err);
 
 	  if (is6)
-	    buf = grab_extradata(buf, end, "DNSMASQ_RELAY_ADDRESS", &err);
+	    buf = grab_extradata(buf, end, "SAFEDNS_RELAY_ADDRESS", &err);
 	  else 
-	    my_setenv("DNSMASQ_RELAY_ADDRESS", data.giaddr.s_addr != 0 ? inet_ntoa(data.giaddr) : NULL, &err); 
+	    my_setenv("SAFEDNS_RELAY_ADDRESS", data.giaddr.s_addr != 0 ? inet_ntoa(data.giaddr) : NULL, &err); 
 	  
 	  for (i = 0; buf; i++)
 	    {
-	      sprintf(daemon->dhcp_buff2, "DNSMASQ_USER_CLASS%i", i);
+	      sprintf(daemon->dhcp_buff2, "SAFEDNS_USER_CLASS%i", i);
 	      buf = grab_extradata(buf, end, daemon->dhcp_buff2, &err);
 	    }
 	  
 	  sprintf(daemon->dhcp_buff2, "%u", data.remaining_time);
-	  my_setenv("DNSMASQ_TIME_REMAINING", data.action != ACTION_DEL && data.remaining_time != 0 ? daemon->dhcp_buff2 : NULL, &err);
+	  my_setenv("SAFEDNS_TIME_REMAINING", data.action != ACTION_DEL && data.remaining_time != 0 ? daemon->dhcp_buff2 : NULL, &err);
 	  
-	  my_setenv("DNSMASQ_OLD_HOSTNAME", data.action == ACTION_OLD_HOSTNAME ? hostname : NULL, &err);
+	  my_setenv("SAFEDNS_OLD_HOSTNAME", data.action == ACTION_OLD_HOSTNAME ? hostname : NULL, &err);
 	  if (data.action == ACTION_OLD_HOSTNAME)
 	    hostname = NULL;
 	  
-	  my_setenv("DNSMASQ_LOG_DHCP", option_bool(OPT_LOG_OPTS) ? "1" : NULL, &err);
+	  my_setenv("SAFEDNS_LOG_DHCP", option_bool(OPT_LOG_OPTS) ? "1" : NULL, &err);
 	}
       
       /* we need to have the event_fd around if exec fails */
diff -Nur a/src/log.c b/src/log.c
--- a/src/log.c	2017-05-23 02:58:46.000000000 +0500
+++ b/src/log.c	2018-01-14 21:51:15.000000000 +0500
@@ -300,7 +300,7 @@
 
   if (echo_stderr) 
     {
-      fprintf(stderr, "dnsmasq%s: ", func);
+      fprintf(stderr, "safedns%s: ", func);
       va_start(ap, format);
       vfprintf(stderr, format, ap);
       va_end(ap);
@@ -324,7 +324,7 @@
 	alog_lvl = ANDROID_LOG_DEBUG;
 
       va_start(ap, format);
-      __android_log_vprint(alog_lvl, "dnsmasq", format, ap);
+      __android_log_vprint(alog_lvl, "safedns", format, ap);
       va_end(ap);
 #else
       /* fall-back to syslog if we die during startup or 
@@ -333,7 +333,7 @@
 
       if (!isopen)
 	{
-	  openlog("dnsmasq", LOG_PID, log_fac);
+	  openlog("safedns", LOG_PID, log_fac);
 	  isopen = 1;
 	}
       va_start(ap, format);  
@@ -373,7 +373,7 @@
       if (!log_stderr || !option_bool(OPT_NO_FORK)) 
 	p += sprintf(p, "%.15s ", ctime(&time_now) + 4);
       
-      p += sprintf(p, "dnsmasq%s[%d]: ", func, (int)pid);
+      p += sprintf(p, "safedns%s[%d]: ", func, (int)pid);
         
       len = p - entry->payload;
       va_start(ap, format);  
diff -Nur a/src/option.c b/src/option.c
--- a/src/option.c	2017-05-23 02:58:46.000000000 +0500
+++ b/src/option.c	2018-01-14 21:51:15.000000000 +0500
@@ -4919,7 +4919,7 @@
 
   if (testmode)
     {
-      fprintf(stderr, "dnsmasq: %s.\n", _("syntax check OK"));
+      fprintf(stderr, "safedns: %s.\n", _("syntax check OK"));
       exit(0);
     }
 }  
diff -Nur a/src/safedns.c b/src/safedns.c
--- a/src/safedns.c	1970-01-01 05:00:00.000000000 +0500
+++ b/src/safedns.c	2018-01-14 22:12:56.000000000 +0500
@@ -0,0 +1,254 @@
+// for my_syslog()
+#include "dnsmasq.h"
+#include "safedns.h"
+
+#include <uci.h>
+#include <stdio.h>
+#include <inttypes.h>
+
+
+#define CONFIG_FILENAME     "safedns"
+#define CONFIG_SECTION_MAIN "safedns"
+
+#define MAX_MAC2TOKEN_COUNT 1000
+
+
+uint8_t  safedns_enabled;
+uint32_t default_token;
+uint16_t proxy_port;
+
+struct
+{
+	uint64_t mac;
+	uint32_t token;
+}   mac2token_table[MAX_MAC2TOKEN_COUNT];
+int mac2token_count = 0;
+
+
+
+
+
+static void load_enabled(struct uci_context *c);
+static void load_default_token(struct uci_context *c);
+static void load_proxy_port(struct uci_context *c);
+static void load_mac2token(struct uci_context *c);
+
+void safedns_load_config()
+{
+	struct uci_context *c = uci_alloc_context();
+
+	load_enabled(c);
+	load_default_token(c);
+	load_proxy_port(c);
+	load_mac2token(c);
+
+	uci_free_context(c);
+}
+
+// sizeof() * CHAR_BIT
+static void load_enabled(struct uci_context *c)
+{
+	safedns_enabled = 0;
+
+	struct uci_ptr data;
+	char str[] = CONFIG_FILENAME"."CONFIG_SECTION_MAIN".enabled";
+	if(uci_lookup_ptr(c, &data, str, false) != UCI_OK)
+		my_syslog(LOG_INFO, "can't read 'enabled'");
+	else if(data.o && data.o->v.string)
+		sscanf(data.o->v.string, "%"SCNu8, &safedns_enabled);
+
+	#ifdef SAFEDNS_LOG
+	my_syslog(LOG_INFO, "'enabled' = %"PRIu8, safedns_enabled);
+	#endif // SAFEDNS_LOG
+}
+
+static void load_default_token(struct uci_context *c)
+{
+	default_token = 0;
+
+	struct uci_ptr data;
+	char str[] = CONFIG_FILENAME"."CONFIG_SECTION_MAIN".default_token";
+	if(uci_lookup_ptr(c, &data, str, false) != UCI_OK)
+		my_syslog(LOG_INFO, "can't read 'default_token'");
+	else if(data.o && data.o->v.string)
+		sscanf(data.o->v.string, "%"SCNu32, &default_token);
+
+	#ifdef SAFEDNS_LOG
+	my_syslog(LOG_INFO, "'default_token' = %"PRIu32, default_token);
+	#endif // SAFEDNS_LOG
+}
+
+static void load_proxy_port(struct uci_context *c)
+{
+	proxy_port = 1253;
+
+	struct uci_ptr data;
+	char str[] = CONFIG_FILENAME"."CONFIG_SECTION_MAIN".proxy_port";
+	if(uci_lookup_ptr(c, &data, str, false) != UCI_OK)
+		my_syslog(LOG_INFO, "can't read 'proxy_port'");
+	else if(data.o && data.o->v.string)
+		sscanf(data.o->v.string, "%"SCNu16, &proxy_port);
+
+	#ifdef SAFEDNS_LOG
+	my_syslog(LOG_INFO, "'proxy_port' = %"PRIu16, proxy_port);
+	#endif // SAFEDNS_LOG
+}
+
+static void load_mac2token(struct uci_context *c)
+{
+	mac2token_count = 0;
+
+	int i;
+	for(i = 0; i < MAX_MAC2TOKEN_COUNT; ++i)
+	{
+		struct uci_ptr data;
+		char str[200];
+		sprintf(str, CONFIG_FILENAME".@mac2token[%d]", i);
+
+		if(uci_lookup_ptr(c, &data, str, true) != UCI_OK || data.s == NULL)
+			break;
+
+		struct uci_ptr mac, token;
+		char str_mac[200], str_token[200];
+		sprintf(str_mac,   CONFIG_FILENAME".@mac2token[%d].mac",   i);
+		sprintf(str_token, CONFIG_FILENAME".@mac2token[%d].token", i);
+
+		if(uci_lookup_ptr(c, &mac,   str_mac,   true) != UCI_OK ||   mac.o == NULL ||   mac.o->v.string == NULL
+		|| uci_lookup_ptr(c, &token, str_token, true) != UCI_OK || token.o == NULL || token.o->v.string == NULL
+		)
+			continue;
+
+		uint8_t mac_bytes[6];
+		if(6 == sscanf(mac.o->v.string, "%"SCNx8":%"SCNx8":%"SCNx8":%"SCNx8":%"SCNx8":%"SCNx8,
+		               &mac_bytes[0], &mac_bytes[1], &mac_bytes[2], &mac_bytes[3], &mac_bytes[4], &mac_bytes[5])
+		&& 1 == sscanf(token.o->v.string, "%"SCNu32, &mac2token_table[mac2token_count].token)
+		)
+			mac2token_table[mac2token_count++].mac = ((uint64_t)mac_bytes[0]<<40) | ((uint64_t)mac_bytes[1]<<32)
+			                                       | ((uint64_t)mac_bytes[2]<<24) | ((uint64_t)mac_bytes[3]<<16)
+			                                       | ((uint64_t)mac_bytes[4]<<8)  |  (uint64_t)mac_bytes[5];
+	}
+
+	#ifdef SAFEDNS_LOG
+	my_syslog(LOG_INFO, "mac2token_count = %d", mac2token_count);
+	#endif // SAFEDNS_LOG
+}
+
+
+
+
+
+static uint64_t ip2mac(uint32_t ip);
+static uint32_t mac2token(uint64_t mac);
+static size_t change_packet(uint8_t *packet, size_t packet_len, uint32_t token);
+
+size_t safedns_change_packet_and_port(char *proto_str, uint32_t ip, uint8_t *packet, size_t packet_len, unsigned short *port)
+{
+	if((ip>>24) == 127)
+	{
+		*port = htons(53);
+		#ifdef SAFEDNS_LOG
+		my_syslog(LOG_INFO, "%s [127.x.x.x] -> don't change packet", proto_str);
+		#endif // SAFEDNS_LOG
+		return packet_len;
+	}
+
+	uint64_t mac   = ip2mac(ip);
+	uint32_t token = mac2token(mac);
+	#ifdef SAFEDNS_LOG
+	my_syslog(LOG_INFO, "%s [%d.%d.%d.%d]->[%02"PRIx8":%02"PRIx8":%02"PRIx8":%02"PRIx8":%02"PRIx8":%02"PRIx8"]->[token=%d]",
+	          proto_str,
+	          (ip>>24)&0xFF, (ip>>16)&0xFF, (ip>>8)&0xFF, ip&0xFF,
+	          (int)(mac>>40)&0xFF, (int)(mac>>32)&0xFF, (int)(mac>>24)&0xFF, (int)(mac>>16)&0xFF, (int)(mac>>8)&0xFF, (int)mac&0xFF,
+	          token);
+	#endif // SAFEDNS_LOG
+
+	if(token)
+	{
+		packet_len = change_packet(packet, packet_len, token);
+		*port = htons(proxy_port);
+	}
+
+	return packet_len;
+}
+
+static uint64_t ip2mac(uint32_t ip)
+{
+	FILE *fp = fopen("/proc/net/arp", "rt");
+	if(fp == NULL)
+	{
+		#ifdef SAFEDNS_LOG
+		my_syslog(LOG_INFO, "can't read arp-table");
+		#endif // SAFEDNS_LOG
+		return 0;
+	}
+
+	uint64_t mac = 0;
+	char line[100];
+	while(fgets(line, sizeof(line), fp) != NULL)
+	{
+		uint8_t  ip_bytes[4];
+		uint8_t mac_bytes[6];
+		if(4 + 6 == sscanf(line, "%"SCNu8".%"SCNu8".%"SCNu8".%"SCNu8" %*s %*s " \
+								 "%"SCNx8":%"SCNx8":%"SCNx8":%"SCNx8":%"SCNx8":%"SCNx8,
+							&ip_bytes[0],  &ip_bytes[1],  &ip_bytes[2],  &ip_bytes[3],
+						   &mac_bytes[0], &mac_bytes[1], &mac_bytes[2], &mac_bytes[3], &mac_bytes[4], &mac_bytes[5])
+		)
+		{
+			uint32_t scanned_ip = (ip_bytes[0]<<24) | (ip_bytes[1]<<16) | (ip_bytes[2]<<8) | ip_bytes[3];
+			if(ip == scanned_ip)
+			{
+				mac = ((uint64_t)mac_bytes[0]<<40) | ((uint64_t)mac_bytes[1]<<32)
+					| ((uint64_t)mac_bytes[2]<<24) | ((uint64_t)mac_bytes[3]<<16)
+					| ((uint64_t)mac_bytes[4]<<8)  |  (uint64_t)mac_bytes[5];
+				break;
+			}
+		}
+	}
+
+	fclose(fp);
+	return mac;
+}
+
+static uint32_t mac2token(uint64_t mac)
+{
+	int i;
+	if(mac != 0)
+		for(i = 0; i < mac2token_count; ++i)
+			if(mac2token_table[i].mac == mac)
+				return mac2token_table[i].token;
+	return default_token;
+}
+
+static size_t change_packet(uint8_t *packet, size_t packet_len, uint32_t token)
+{
+//	packet[11] = 1;
+	((struct dns_header *)packet)->arcount = htons(1);
+
+	uint8_t        *limit = NULL;	//packet + PACKETSZ;
+	uint8_t *after_packet = packet + packet_len;
+
+	char *name = NULL;
+	unsigned short type  = 0xFFED;
+	unsigned short class = 0x0001;
+	unsigned long  ttl   = 0;
+
+	add_resource_record(NULL, limit, NULL, 0, &after_packet, ttl, NULL, type, class, "l", name, token);
+	return after_packet - packet;
+/*
+	char tail[] = {
+		0x00,                   // name
+		0xFF, 0xED,             // Type
+		0x00, 0x01,             // Class
+		0x00, 0x00, 0x00, 0x00, // TTL
+		0x00, 0x04,             // RDLEN
+		(token>>24) & 0xFF,     // RDATA
+		(token>>16) & 0xFF,     //
+		(token>> 8) & 0xFF,     //
+		(token>> 0) & 0xFF      //
+	};
+*/
+//	size_t tail_len = sizeof(tail);
+//	memcpy(packet + packet_len, tail, tail_len);
+//	return packet_len + tail_len;
+//	return resize_packet((struct dns_header *)packet, packet_len, tail, sizeof(tail));
+}
diff -Nur a/src/safedns.h b/src/safedns.h
--- a/src/safedns.h	1970-01-01 05:00:00.000000000 +0500
+++ b/src/safedns.h	2018-01-14 21:51:15.000000000 +0500
@@ -0,0 +1,15 @@
+#ifndef SAFEDNS_GLOBAL_VARS_H_INCLUDED
+#define SAFEDNS_GLOBAL_VARS_H_INCLUDED
+
+#include <stddef.h>
+#include <stdint.h>
+
+#define SAFEDNS_LOG
+//#define SAFEDNS_TRACE
+
+void safedns_load_config();
+size_t safedns_change_packet_and_port(char *proto_str, uint32_t ip, uint8_t *packet, size_t packet_len, unsigned short *port);
+
+extern uint8_t safedns_enabled;
+
+#endif // SAFEDNS_GLOBAL_VARS_H_INCLUDED
